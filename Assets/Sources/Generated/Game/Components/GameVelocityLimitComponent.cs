//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public VelocityLimit velocityLimit { get { return (VelocityLimit)GetComponent(GameComponentsLookup.VelocityLimit); } }
    public bool hasVelocityLimit { get { return HasComponent(GameComponentsLookup.VelocityLimit); } }

    public void AddVelocityLimit(float newValue) {
        var index = GameComponentsLookup.VelocityLimit;
        var component = (VelocityLimit)CreateComponent(index, typeof(VelocityLimit));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceVelocityLimit(float newValue) {
        var index = GameComponentsLookup.VelocityLimit;
        var component = (VelocityLimit)CreateComponent(index, typeof(VelocityLimit));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveVelocityLimit() {
        RemoveComponent(GameComponentsLookup.VelocityLimit);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherVelocityLimit;

    public static Entitas.IMatcher<GameEntity> VelocityLimit {
        get {
            if (_matcherVelocityLimit == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.VelocityLimit);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherVelocityLimit = matcher;
            }

            return _matcherVelocityLimit;
        }
    }
}
