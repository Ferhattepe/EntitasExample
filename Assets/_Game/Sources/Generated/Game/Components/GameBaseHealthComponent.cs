//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public BaseHealthComponent baseHealth { get { return (BaseHealthComponent)GetComponent(GameComponentsLookup.BaseHealth); } }
    public bool hasBaseHealth { get { return HasComponent(GameComponentsLookup.BaseHealth); } }

    public void AddBaseHealth(int newValue) {
        var index = GameComponentsLookup.BaseHealth;
        var component = (BaseHealthComponent)CreateComponent(index, typeof(BaseHealthComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceBaseHealth(int newValue) {
        var index = GameComponentsLookup.BaseHealth;
        var component = (BaseHealthComponent)CreateComponent(index, typeof(BaseHealthComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveBaseHealth() {
        RemoveComponent(GameComponentsLookup.BaseHealth);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherBaseHealth;

    public static Entitas.IMatcher<GameEntity> BaseHealth {
        get {
            if (_matcherBaseHealth == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.BaseHealth);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherBaseHealth = matcher;
            }

            return _matcherBaseHealth;
        }
    }
}
